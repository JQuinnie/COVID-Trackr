{"version":3,"sources":["components/SingleCard/SingleCard.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/SingleCard/SingleCard.module.css","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["SingleCard","data","type","text","lastUpdate","typeStyle","styles","Infected","Recovered","Deaths","Grid","item","component","Card","xs","md","className","cx","card","CardContent","Typography","color","gutterButtom","variant","start","end","value","duration","separator","Date","toDateString","Cards","confirmed","recovered","deaths","types","container","spacing","justify","map","idx","key","url","fetchDailyData","a","axios","get","date","reportDate","total","console","log","fetchCountries","countries","country","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","pointStyle","fill","barChart","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFecthedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","setData","setCountry","fetchData","then","response","catch","error","image","src","alt","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0dbdb6a5.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './SingleCard.module.css';\n\nconst SingleCard = ({ data: { type, text, data }, lastUpdate }) => {\n  let typeStyle = type === 'Infected' ? styles.Infected : type === 'Recovered' ? styles.Recovered : styles.Deaths;\n\n  return (\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, typeStyle)}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterButtom>\n          {type}\n        </Typography>\n        <Typography variant=\"h5\">\n          <CountUp start={0} end={data.value} duration={2} separator=\",\" />\n        </Typography>\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n        <Typography variant=\"body2\">{`Number of ${text} of COVID-19`}</Typography>\n      </CardContent>\n    </Grid>\n  );\n};\n\nexport default SingleCard;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport SingleCard from '../SingleCard/SingleCard';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return <h2>Loading...</h2>;\n  }\n\n  const types = [\n    { type: 'Infected', text: 'Active Cases', data: confirmed },\n    { type: 'Recovered', text: 'Recoveries', data: recovered },\n    { type: 'Deaths', text: 'Deaths', data: deaths },\n  ];\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {types.map((type, idx) => (\n          <SingleCard key={idx} data={type} lastUpdate={lastUpdate} />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n// NOTE: this is implemented in App.js under useEffect as a Promise\n// export const fetchData = async (country) => {\n\n//   try {\n//     const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n\n//     return { confirmed, recovered, deaths, lastUpdate };\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// NOTE: this one call can replace both fetchData and fetchCountry\n// export const fetchData = async (country) => {\n  // let changeableUrl = url;\n  // if(country) {\n  //   changeableUrl = `${url}/countries/${country}`;\n  // }\n//   try {\n//   const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n\n//   return { confirmed, recovered, deaths, lastUpdate };\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date,\n    }));\n  } catch (error) {\n    console.log(error)\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchCountry = async (country) => {\n  try {\n  const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(`${url}/countries/${country}`);\n\n  return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  // TODO: make this chart look nicer\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            backgroundColor: 'rgba(0, 0, 255, 0.2)',\n            pointStyle: 'dash',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.4)',\n            pointStyle: 'dash',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({handleCountryChange}) => {\n  const [fetchedCountries, setFecthedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFecthedCountries(await fetchCountries());\n    }\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=''>Global</option>\n        {fetchedCountries.map((country, idx) => <option key={idx} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  )\n};\n\nexport default CountryPicker;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Cards, Chart, CountryPicker } from './components';\n\nimport image from './images/image.png';\n\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState('');\n\n  const fetchData = (country) => {\n    let url = 'https://covid19.mathdro.id/api';\n\n    if (country) {\n      url = `${url}/countries/${country}`;\n    }\n\n    axios\n      .get(url)\n      .then((response) => {\n        const {\n          data: { confirmed, recovered, deaths, lastUpdate },\n        } = response;\n\n        const modifiedData = {\n          confirmed,\n          recovered,\n          deaths,\n          lastUpdate,\n        };\n\n        setData(modifiedData);\n        setCountry(country);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  // on first page load\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function handleCountryChange(country) {\n    await fetchData(country);\n  }\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={image} alt=\"COVID-19\" />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SingleCard_card__1IE70\",\"Infected\":\"SingleCard_Infected__2b6QO\",\"Recovered\":\"SingleCard_Recovered__Yiy76\",\"Deaths\":\"SingleCard_Deaths__3licy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}